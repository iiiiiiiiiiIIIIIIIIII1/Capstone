CSV 파일 -> NiFi -> Kafka -> TimescaleDB -> superset

1)도커 터미널에서 해당 공간으로 이동
cd e:
cd E:\Capstone\DockerDesktopWSL

2)도커 시작과 끄기/확인
docker-compose up -d
docker-compose down
docker-compose ps
docker ps -a

3)Nifi 접속
docker exec -it dockerdesktopwsl-nifi-1 /bin/bash
cd /opt/nifi/nifi-current/logs
grep "Username" nifi-app.log
grep "Password" nifi-app.log
exit

*확인할 부분(컨테이너를 켜고 끌때마다 바뀜)
Generated Username []
Generated Password []

https://localhost:9443/nifi
여기서 로그인

4)Kafka에서 데이터 확인/삭제
docker exec -it dockerdesktopwsl-kafka-1 bash
kafka-console-consumer --bootstrap-server localhost:9092 --topic test-topic --from-beginning

kafka-topics --bootstrap-server localhost:9092 --delete --topic test-topic
kafka-topics --bootstrap-server localhost:9092 --create --topic test-topic --partitions 1 --replication-factor 1
kafka-topics --bootstrap-server localhost:9092 --list

5)db에서 데이터 확인/삭제
docker exec -it timescaledb psql -U myuser -d mydb
\pset pager off
SELECT * FROM stock_data;
SELECT COUNT(*) FROM stock_data;

DELETE FROM stock_data;

6)superset 접속
http://localhost:8088

username/password(first/last name, email은 중요하지 않음)

===========================================================================

1)db에서 테이블 만들기
docker exec -it timescaledb psql -U myuser -d mydb

CREATE EXTENSION IF NOT EXISTS timescaledb;

CREATE TABLE stock_data (
    year INT,
    company_name TEXT,
    stock_gr DOUBLE PRECISION,
    sale_gr DOUBLE PRECISION,
    debt_gr DOUBLE PRECISION,
    profit_gr DOUBLE PRECISION,
    sales_profit DOUBLE PRECISION,
    is_kospi INT,
    market TEXT,
    inserted_at TIMESTAMPTZ DEFAULT now()
);

SELECT create_hypertable('stock_data', 'inserted_at');

2)superset 초기화(**한 번만 실행)
docker exec -it superset superset db upgrade
docker exec -it superset superset fab create-admin
# 입력: username, password, email 등 (계정 만드는 중 username/password는 반드시 기억)
docker exec -it superset superset init

3)데이터베이스 추가
1단계: DB 연결 추가
Superset 상단 메뉴에서
Settings → Database Connections 또는 Data → Databases 선택

오른쪽 위의 "+" (Add Database) 클릭
다음 항목 입력:
Database: PostgreSQL
SQLAlchemy URI 입력

(TimescaleDB 기준):
postgresql://myuser:mypassword@timescaledb:5432/mydb
myuser: DB 사용자명
mypass: 비밀번호
timescaledb: 도커 내 컨테이너 이름 (docker-compose 기준)
5432: 포트
mydb: DB 이름

"Test Connection" 눌러서 연결 성공 확인
성공하면 "Connect" 또는 "Finish" 눌러 저장

4)아래 오류 메시지:(설치하고 컨테이너 내렸다 올리기)
ERROR: Could not load database driver: PostgresEngineSpec

은 Superset이 PostgreSQL 데이터베이스 드라이버를 
설치하지 않아서 발생하는 문제. 

>방법. Superset Docker에서 드라이버 설치
docker exec -it superset bash
pip install psycopg2-binary

5)테이블 연결
datasets(상단 메뉴)->+dataset
database: 연결된것 선택
schema: public
table: stock_data

6)superset사용중 페이지 오류 발생시 ctrl+f5로 해결


